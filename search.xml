<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Markdown语法简明]]></title>
    <url>%2Fd87f7e0c.html</url>
    <content type="text"><![CDATA[原文链接: http://www.markdown.cn/ 能够与HTML兼容Markdown能够很好的和HTML兼容，写法类似如下：1234567普通Markdown段落&lt;div&gt; &lt;span&gt;html文档&lt;/span&gt;&lt;/div&gt;另一个Markdown段落 值得注意的是，Markdown会把我们本来在HTML文档中需要转换的特殊符号，比如&amp;, &lt;, &gt;等装换成相应的HTML实体&amp;amp, &amp;lt, &amp;gt, 但对于HTML实体(即已经转换过的)则不会再转换，比如&amp;copy, &amp;amp等, 还是会保持原来的样子，而不会再把&amp;符号再转换一次 区块元素段落和换行Markdown普通段落是由一个或多个连续的文本行组成，在它前后需要有一个及以上的空行(显示上看起来是空的那就是空行，比如只包含空格和制表符那就是空行), 普通段落就不要用空格和制表符来缩进了, 缩进另有用处 关于换行Markdown中换行是需要插入&lt;br /&gt;标签来进行强制换行的，若想要依赖Markdown来插入&lt;br /&gt;标签，在插入处先按入两个以上空格然后回车 注意: 在当前版本的Hexo和Github中，并不需要空格之后再插入&lt;br /&gt;标签, 并且当前版本的Hexo的换行是跟我们文件换行一致的, 即我们可以不需要输入&lt;br /&gt;标签也可换行 标题Markdown支持两种标题语法, 类Setext和类Atx形式类Setext形式使用底线形式，利用=(最高阶标题), -(第二阶标题)1234最高阶标题===第二阶标题--- 任意数量的=, -都可以达到效果 注意: 在当前版本的Hexo需要使用最少两个的=, -才能起作用, Github则都可以 类Atx形式则是在行首插入1到6个#, 对应标题1到6123456# H1## H2### H3#### H4##### H5###### H6 注意: 使用#符号需要在#之后插入至少一个空格才能起作用 区块引用Markdown中新建区块引用，只需要在行首加上&gt;符号即可12&gt; 这是一个引用&gt; 这是一个区块引用 Markdown也允许你只在第一行插入&gt;即可12&gt; 这是一个引用这是一个区块引用 区块引用也可以嵌套, 只需要根据层次插入不同数量的&gt;符号即可12345678&gt; 这是第一层引用&gt; &gt; 这是第二层引用&gt; 这个也是第二层这还是第二层&gt;&gt; 这个才是第一层这个才不是引用 示例: 这是第一层引用 这是第二层引用这个也是第二层这还是第二层 这个才是第一层 这个才不是引用 区块引用内也可以使用其他的Markdown语法, 包括标题、列表、代码区块等12345&gt; 1. 列表项1&gt; 2. 列表项2&gt;&gt;&gt; var test = 'test'; 示例: 列表项1 列表项2 var test = &apos;test&apos;; 列表无序列表使用星号(*)、加号(+)、减号(-)作标记, 对于同一个无序列表需使用同一种符号有序列表则使用数字加一个英文句点(.), 使用的数字并不会影响输出的HTML1234567891011* 无序列表* 无序列表+ 无序列表+ 无序列表- 无序列表- 无序列表1. 有序列表8. 有序列表 以上有序列表产生的HTML结构如下1234&lt;ol&gt;&lt;li&gt;有序列表&lt;/li&gt;&lt;li&gt;有序列表&lt;/li&gt;&lt;/ol&gt; 列表标记通常放最左边, 但也可以有缩进，最多3个空格, 且项目标记后至少要跟一个空格或者制表符 注意: 当前版本Hexo无所谓项目符号后跟多少个空格, 都可以解析, Github则最多只能跟4个空格 有可能在无意中产生了项目列表12018. 无意产生的列表 要避免, 则需手动转义(.), 即在英文句点(.)前加反斜杠12018\. 这就不会了 代码区块Markdown中建立代码区块很简单, 只需要简单的缩进4个空格或者一个制表符就可以了123这是普通段落 这是代码区块 一个代码区块会一直持续到没有缩进的那一行或者直到文件结束, 而且代码区块中的&amp;, &lt;, &gt;等会被自动转为HTML实体, 但代码区块中一般的Markdown语法并不会被转义, 像星号就只是星号 分隔线在一行中用三个及以上的星号(*)、减号(-)、底线(_)来建立一个分隔线, 行内不能有其他东西, 也可以在星号, 减号中间加入空格123456**** * *---- - -_ _ _--------------- 区段元素链接Markdown支持两种形式的链接语法: 行内式和参考式不管哪种链接, 链接文字都是用[方括号]来标记 行内式行内式链接是在方括号后紧跟着圆括号并在其中插入链接, 若需要链接title, 可以在网址后加个空格, 用引号(单双都行)将title包起来1[百度](http://wwww.baidu.com "百度链接") 若是链接到同样的主机资源, 也可以使用相对路径1[关于我](/about/) 参考式参考式则是在第一个方括号后再紧跟一个方括号, 这个括号内填入链接标识, 然后在文件的任意处将链接标识的内容定义出来, 链接的title一样可以使用引号包起来, 也可以使用()包起来, 甚至可以将title放到下一行 另外, 链接标识是可以有字母、数字、空白和标点符号的, 但是, 不区分大小写的123[百度][bd][bd]: http://www.baidu.com "百度链接" 链接标识的定义形式: 方括号[](前面可以选择性加上最多三个空格的缩进), 里面是链接标识的内容 跟着一个冒号: 跟着一个以上的空格或者制表符 链接的网址 链接的title, 有跟着title时, 记得要加空格 注意: Markdown.pl 1.0.1会忽略单引号包起来的链接title, 所以, 尽量使用双引号吧 当然如果链接文字跟链接标识是一致的, 那还可以使用隐式链接, 隐式链接标识就是直接把链接标识放空123[Google][][Google]: http://www.google.com "Google" 强调Markdown使用星号(*)、底线(_)作为强调字词的符号, 被一个星号或者底线包围的字词会转换成被&lt;em&gt;标签包围, 用两个星号或底线包围的字词则会被转成&lt;strong&gt;标签包围1234*单个符号*_单个符号_**两个符号**__两个符号__ 使用以上哪种形式都行, 只要注意用啥开始的就用啥结束, 如果在星号或者底线两边都有空白的话, 那星号和底线只会被当成普通的符号要插入星号或者底线, 可以使用反斜线1\*插入的星号\* 代码Markdown的代码区段可以使用`来进行标记, 只是标记小段行内代码可以使用一对`来包裹, 产生的HTML是由&lt;code&gt;标签来包裹的, 在`范围内, &amp;, &lt;, &gt;等会被转换成相应的HTML实体Markdown还有使用三个`来进行包裹的区块代码, 产生的HTML是由&lt;pre&gt;和&lt;code&gt;相辅助包裹的 注意: 在当前版本Hexo中, 使用缩进产生的代码区块并不会加上行号, 使用三个`包裹的代码区块才会显示行号 开始和结束的三个`都是各占一行, 另外在开始的`后面紧跟代码所用的语言, 则会为代码加上高亮 `` `javascript `` ` 注意: 在当前版本Hexo中, 在HTML标签中由三个`定义的代码块将会被解析, Github则不会, 根据Markdown语法, Github才是对的 图片Markdown中也是两种方法定义图片, 行内式和参考式, 与链接的定义方式极其相似, 最主要的差别在于图片定义的最前面要加一个!1234![pic](/path/pic)![pic one][id][id]: /path/picOne "picOne" 注意: 到目前为止, Markdown还无法定义图片宽高, 若有需要, 请直接使用&lt;img&gt;标签 其他反斜杠转义Markdown支持以下符号前加上反斜杠插入普通符号 123456789101112\ 反斜杠` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 圆括号# 井字号+ 加号- 减号. 英文句点! 感叹号]]></content>
  </entry>
</search>
